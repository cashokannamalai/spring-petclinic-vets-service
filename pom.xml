<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.samples.petclinic.vets</groupId>
	<artifactId>spring-petclinic-vets-service</artifactId>
	<packaging>jar</packaging>
	<description>Spring PetClinic Vets Service</description>
	 <version>3.2.4</version>

	

   <properties>
        <java.version>17</java.version>
        <spring.boot.version>2.6.9</spring.boot.version>
        <spring-cloud.version>2023.0.1</spring-cloud.version>
        <chaos-monkey-spring-boot.version>2.3.10</chaos-monkey-spring-boot.version>
        <jolokia-core.version>1.7.1</jolokia-core.version>

        <!-- Workaround for resolving the issue while using the provided lombok dependency in upgraded Java version.
        Should be removed while future upgrading-->
        <lombok.version>1.18.30</lombok.version>

        <docker.image.prefix>springcommunity</docker.image.prefix>
        <docker.image.exposed.port>8081</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>
        <!-- podman is also supported -->
        <container.executable>docker</container.executable>
        <!-- By default, the OCI image is build for the linux/amd64 platform -->
        <!-- For Apple Silicon M2 Chip you have to change it to the linux/arm64 -->
        <container.platform>linux/amd64</container.platform>
        <!-- The -load option is a shortcut for or -output=type=docker -->
        <!-- Could be changed by the -push option !-->
        <container.build.extraarg>--load</container.build.extraarg>
    </properties>

	<dependencies>
        <!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			 <version>2.6.9</version>
			
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
	     <version>2.6.9</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
	     <version>2.6.9</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
	    <version>2.6.9</version>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			 <version>2.6.9</version>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
	     <version>2.6.9</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring Cloud-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
	     <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
	      <version>3.1.0</version>
        </dependency>

        <!-- Third parties-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			 <version>1.18.30</version>
			
            <scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
	    <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
	    <version>2.3.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
	    <version>2.9.3</version>
        </dependency>
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
	    <version>1.7.1</version>
        </dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version> 2.5.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
			<version>8.0.29</version> 
			<scope>runtime</scope>
		</dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
	    <version>1.7.6</version>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>chaos-monkey-spring-boot</artifactId>
	    <version>2.3.10</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-zipkin</artifactId>
	    <version>1.6.0</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-observation</artifactId>
	    <version>1.9.1</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
	    <version>1.9.1</version>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
	    <version>2.16.3</version>
        </dependency>
        <dependency>
            <groupId>net.ttddyy.observation</groupId>
            <artifactId>datasource-micrometer-spring-boot</artifactId>
            <version>1.0.2</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
	     <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
	    <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

    <profiles>
        <profile>
            <id>buildDocker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
